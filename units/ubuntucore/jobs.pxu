id: ubuntucore/os-recovery-mode
_summary: Reboot into recovery mode and log into the system using prior credentials.
_purpose:
 Check if system will reboot to recovery mode successfully
requires:
 lsb.release >= '20'
_steps:
 1. Reboot the system to recovery mode
    $ sudo snap reboot --recover
 2. System should respond to the command and reboot itself
 3. Wait until system completes the reboot process
 4. Check if system is running in recovery mode
    $ cat /proc/cmdline
 5. Reboot the system back to normal run mode
    $ sudo snap reboot
 6. Check again if system is running in run mode
    $ cat /proc/cmdline
_verification:
 Check if kernel cmdline when system in recovery mode includes:
  'snapd_recovery_mode=recover'
 Check if kernel cmdline when system in normal run mode includes:
  'snapd_recovery_mode=run'
plugin: manual
category_id: ubuntucore

id: ubuntucore/os-reinstall-mode
_summary: Reboot into reinstall mode and trigger a factory reset on the device.
_purpose:
 Check if system will reboot to reinstall mode and reinitialise the device with fresh factory reset
requires:
 lsb.release >= '20'
_steps:
 WARNING: ALL EXISTING DATA ON THIS DEVICE WILL BE WIPED!!
 1. Check the current serial-assertion device-key
    $ ls /var/lib/snapd/save/device/private-keys-v1
 2. Clear TPM first if this device has enabled secure boot & FDE
    For x86-based platforms:
    $ sudo su
    $ echo 5 > /sys/class/tpm/tpm0/ppi/request
    For ARM-based platforms:
    There is no generic command for ARM-based platforms, please refer to device user manual
 3. Reboot the system to reinstall mode
    $ sudo snap reboot --install
 4. System should respond to the command and reboot itself
 5. Wait until system completes the installation and initialization process
 6. Check serial-assertion device-key after installation completes
    $ ls /var/lib/snapd/save/device/private-keys-v1
_verification:
 Check if a new serial-assertion device-key got generated after reinstallation completes
plugin: manual
category_id: ubuntucore

id: ubuntucore/os-fail-boot
_summary: Automatically rollback after failed boot after upgrade
_purpose:
 Check system will rollback to original core snap if failed to boot the updated one
_steps:
 1. Remove reverted version (and associated data)
    snap remove core --revision=<edge_revision>
 2. Check that the edge revision is back in the refresh list
    snap refresh --list core
 3. Update
    snap refresh core --edge
 4. Modify the GRUB Environment Block to simulate a failed boot
    sudo /usr/bin/grub-editenv /boot/grub/grubenv set snap_mode=trying
 5. Reboot the system and log in
    sudo reboot
 6. Check version number
    snap list core
_verification:
 Check system is currently booting the stable core version
plugin: manual
category_id: ubuntucore
estimated_duration: 500

id: ubuntucore/os-fail-boot-with-refresh-control
_summary: Automatically rollback after failed boot after upgrade
_purpose:
 Check system will rollback to original core snap if failed to boot the updated one
_steps:
 1. Remove reverted version (and associated data)
    snap remove core --revision=<edge_revision>
 2. Check that the edge revision is back in the refresh list
    snap refresh --list core
 3. Update
    snap refresh core --edge --ignore-validation
 4. Modify the GRUB Environment Block to simulate a failed boot
    sudo /usr/bin/grub-editenv /boot/grub/grubenv set snap_mode=trying
 5. Reboot the system and log in
    sudo reboot
 6. Check version number
    snap list core
_verification:
 Check system is currently booting the stable core version
plugin: manual
category_id: ubuntucore
estimated_duration: 500

id: ubuntucore/sshd
_summary: SSH is enabled and operational
_purpose:
 Check if user can access the system through ssh from other machine
_steps:
 1. Execute following command on other machine in same network
     ssh [user id]@[ip address of the testing system]
 2. Enter password to login
_verification:
 Can log into system through ssh from other machine
plugin: manual
category_id: ubuntucore
estimated_duration: 120
